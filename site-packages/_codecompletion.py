from PytoClasses import EditorViewController
import jedi

def suggestForCode(code, path):
    try:
        script = jedi.Script(code, len(code.splitlines()), len(code.splitlines()[-1])-1, path)
    
        suggestions = []
    
        docs = {}
    
        for completion in script.completions():
            suggestion = completion.name
        
            if (completion.complete.startswith(".")):
                suggestion = "."+suggestion
        
            if (suggestion.startswith("_") or completion.name in __builtins__["deprecated"]):
                continue
        
            suggestions.append(suggestion)

            docString = completion.docstring()
            
            if (completion.type == "module"):
                docString = ""
            
            docString = (completion.name+"\n"+completion.type)+"\n\n"+docString
            docs[suggestion] = docString
    
        EditorViewController.visible.suggestions = suggestions
        EditorViewController.visible.docStrings = docs
    except:
        
        if EditorViewController.visible == None:
            return
        
        EditorViewController.visible.suggestions = []
        EditorViewController.visible.docStrings = None

def suggestionsForCode(code):
    
    try:
        script = jedi.Script(code, len(code.splitlines()), len(code.splitlines()[-1])-1)
        
        suggestions = {}
        
        for completion in script.completions():
            
            if (completion.complete.startswith(".")):
                suggestion = "."+suggestion
            
            if (completion.name.startswith("_") or completion.name in __builtins__["deprecated"]):
                continue
        
            suggestions[completion.name] = completion.complete
    
        return suggestions
    except Exception as e:
        return {}
