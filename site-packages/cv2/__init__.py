try:
    import importlib

    import __cv2_cv2 as cv2

    from . import data
    from .data import *

    # wildcard import above does not import "private" variables like __version__
    # this makes them available
    globals().update(cv2.__dict__)
except ImportError as e: # For documentation
    print(e)

def autorotate(frame, cam):
    """
    Returns an auto rotated frame captured with hardware camera.
    
    By default, frames captured by hardware camera will be rotated correctly only if the device is in portrait mode. By calling this function, you can make sure things like face detection will work on any device orientation.
    
    :param frame: The frame captured by the camera.
    :param cam: The camera used to capture the frame. ``0`` for back and ``1`` for front.
    """
    
    from scipy.ndimage import rotate
    from pyto import QuickLookHelper
    
    return rotate(frame, QuickLookHelper.openCvRotation(cam))

def imshow_image(title, image):
    from PIL import Image
    from io import BytesIO
    from pyto import QuickLookHelper
    import base64
    
    image = Image.fromarray(image)
    buffered = BytesIO()
    image.save(buffered, format="JPEG")
    img_str = base64.b64encode(buffered.getvalue()).decode("utf-8")
    
    try:
        QuickLookHelper.previewFile(img_str, script=threading.current_thread().script_path, removePrevious=True)
    except:
        QuickLookHelper.previewFile(img_str, script=None, removePrevious=True)
    
imshow = imshow_image
