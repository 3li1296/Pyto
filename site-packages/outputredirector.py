"""
Module used internally by Pyto for redirecting output.
"""

import sys
import console
import threading

oldStdout = sys.__stdout__

class Reader:
    """
    Class used as file to be passed to `sys.stdout` and `sys.stderr`.
    """
    
    __handler__ = None
    
    @property
    def buffer(self):
        return self._buffer
    
    @property
    def encoding(self):
        return "utf-8"
    
    @property
    def closed(self):
        return False
    
    def __init__(self, handler):
        """
        Initializes the file.
        
        Args:
            handler: Block to be called when output is received. The block should receive a String.
        """
        self.__handler__ = handler
    
    def isatty(self):
        return False
    
    def writable(self):
        return True
    
    def flush(self):
        pass
    
    def write(self, txt):
        
        if (threading.currentThread() in console.ignoredThreads):
            return
        
        if txt.__class__.__name__ == 'str':
            oldStdout.write(txt)
            self.__handler__(txt)
        elif txt.__class__.__name__ == 'bytes':
            text = txt.decode()
            self.write(self, text)

__all__ = ['Reader']
