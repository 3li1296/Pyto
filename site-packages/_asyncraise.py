"""
A module for raising exceptions on other threads.
    
Taken from https://gist.github.com/liuw/2407154
"""

import ctypes
import threading

NULL = 0

"""
Raises an exception on given thread.

Args:
    thread_obj: The thread where the exception will be raised.
    exception: The exception to raise.
"""
def ctype_async_raise(thread_obj, exception):
    found = False
    target_tid = 0
    for tid, tobj in threading._active.items():
        if tobj is thread_obj:
            found = True
            target_tid = tid
            break
    
    if not found:
        raise ValueError("Invalid thread object")

        ret = ctypes.pythonapi.PyThreadState_SetAsyncExc(ctypes.c_long(target_tid), ctypes.py_object(exception))
        # ref: http://docs.python.org/c-api/init.html#PyThreadState_SetAsyncExc
        if ret == 0:
            raise ValueError("Invalid thread ID")
        elif ret > 1:
            # Huh? Why would we notify more than one threads?
            # Because we punch a hole into C level interpreter.
            # So it is better to clean up the mess.
            ctypes.pythonapi.PyThreadState_SetAsyncExc(target_tid, NULL)
            raise SystemError("PyThreadState_SetAsyncExc failed")
